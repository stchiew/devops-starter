# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - "**.yml"
pool:
  vmImage: ubuntu-20.04

name: $(Date:yyyyMMdd)$(Rev:.r)_
variables:
  - group: Global Deployment
  - group: SharePoint Deployment

stages:
  - stage: Build
    jobs:
      - job: build_job
        displayName: Build Job
        steps:
          - checkout: self
          - task: NodeTool@0
            displayName: "Use Node 16.x"
            inputs:
              versionSpec: "16.x"

          - task: Npm@1
            displayName: "Install npm packages"
            inputs:
              command: install

          - task: gulp@0
            displayName: Bundle solution
            inputs:
              gulpFile: "./gulpfile.js"
              targets: "bundle"
              arguments: "--ship"

          - task: gulp@0
            displayName: Package solution
            inputs:
              gulpFile: "./gulpfile.js"
              targets: "package-solution"
              arguments: "--ship"

          - task: CopyFiles@2
            displayName: "Copy sppkg-file to artifact staging directory"
            inputs:
              Contents: sharepoint/**/*.sppkg
              TargetFolder: "$(Build.ArtifactStagingDirectory)"

          - task: PublishBuildArtifacts@1
            displayName: "Publish staged artifacts"
            inputs:
              ArtifactName: "drop"
  # The 'Release to QA stage deploys The SPPKG to the Quality Assurance Environment
  # It will only do so if the Build-stage has completed successfully.

  - stage: "ReleaseToQualityAssurance"
    displayName: "Release To Quality Assurance"
    condition: succeeded('Build')

    jobs:
      - deployment: "ReleaseToQA"
        displayName: "Release to QA"

        environment: "Quality Assurance environment"

        strategy:
          runOnce:
            deploy:
              steps:
                # Download the certificate to the agent
                - task: DownloadSecureFile@1
                  name: caCertificate
                  displayName: "Download secure file"
                  inputs:
                    secureFile: "DevOpsStarter.pfx"

                # Configure the Node.JS version we want to use
                - task: NodeTool@0
                  displayName: "Use Node 16.x"
                  inputs:
                    versionSpec: 16.x

                # Install the CLI for Microsoft 365
                - task: Npm@1
                  displayName: "Install CLI for Microsoft 365"
                  inputs:
                    command: custom
                    verbose: false
                    customCommand: "install -g @pnp/cli-microsoft365"

                - script: ls $(Pipeline.Workspace)/drop/

                - script: m365 login --authType certificate --certificateFile "$(caCertificate.secureFilePath)" --password "$(CertificatePassword)" --appId "$(AppId)" --tenant "$(TenantId)"
                  displayName: "Login to SPO"

                # Execute a CLI script to deploy the app to SharePoint
                - script:
                    m365 spo app add --filePath "$(Pipeline.Workspace)/drop/$(PackageName)" --appCatalogScope sitecollection --appCatalogUrl "$(SiteCollection)" --overwrite
                    m365 spo app deploy --name "$(PackageName)" --appCatalogScope sitecollection --appCatalogUrl "$(SiteCollection)"
                  displayName: "Deploy SharePoint package"
