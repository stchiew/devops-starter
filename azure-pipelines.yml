# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - "**.yml"

name: $(Date:yyyyMMdd)$(Rev:.r)_
variables:
- group: SharePoint Deployment

stages:
  - stage: Build
    dependsOn: []
    jobs:
      - job: build_job
        displayName: build npm
        pool:
          vmImage: ubuntu-20.04
        steps:
          - checkout: self
          - task: NodeTool@0
            displayName: 'Use Node 16.x'
            inputs:
              versionSpec: '16.x'
          - task: Npm@1
            displayName: Install npm
            inputs:
              workingDir: '.'
          - task: gulp@0
            displayName: Bundle solution
            inputs:
              gulpFile: './gulpfile.js'
              targets: 'bundle'
              arguments: '--ship'
          - task: gulp@0
            displayName: Package solution
            inputs:
              gulpFile: './gulpfile.js'
              targets: 'package-solution'
              arguments: '--ship'
          - task: CopyFiles@2
            displayName: 'Copy package to $(Build.ArtifactStagingDirectory)'
            inputs:
              SourceFolder: '.'
              Contents: 'sharepoint/**/*.sppkg'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
              OverWrite: true
          - task: PublishBuildArtifacts@1
            displayName: Publish artifact
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
  - stage: Deploy
    dependsOn: 
      - Build
    jobs:
      - job: deploy_job
        displayName: Deploy package
        pool:
          vmImage: ubuntu-20.04
        steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '16.x'
        - script: sudo npm install --global @pnp/cli-microsoft365
          displayName: Install CLI for Microsoft 365
        - task: DownloadSecureFile@1
          displayName: Download secure file
          name: caCert
          inputs:
            secureFile: 'DevOpsStarter.pfx'
        - script: m365 login --authType certificate --certificateFile "$(caCert.secureFilePath)" --password "$(CertificatePassword)" --appId "$(AppId)" --tenant "$(TenantId)"
          displayName:  'SPO Login'
        
