# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - "**.yml"
pool:
  vmImage: ubuntu-20.04

name: $(Date:yyyyMMdd)$(Rev:.r)_
variables:
  - group: Global Deployment
  - group: SharePoint Deployment

stages:
  - stage: Build
    jobs:
      - job: build_job
        displayName: Build Job
        steps:
          - checkout: self
          - task: NodeTool@0
            displayName: "Use Node 16.x"
            inputs:
              versionSpec: "16.x"

          - task: Npm@1
            displayName: "Install npm packages"
            inputs:
              command: install

          - task: gulp@0
            displayName: Bundle solution
            inputs:
              gulpFile: "./gulpfile.js"
              targets: "bundle"
              arguments: "--ship"

          - task: gulp@0
            displayName: Package solution
            inputs:
              gulpFile: "./gulpfile.js"
              targets: "package-solution"
              arguments: "--ship"

          - task: CopyFiles@2
            displayName: "Copy sppkg-file to artifact staging directory"
            inputs:
              Contents: sharepoint/**/*.sppkg
              TargetFolder: "$(Build.ArtifactStagingDirectory)"

          - task: PublishBuildArtifacts@1
            displayName: "Publish staged artifacts"
            inputs:
              ArtifactName: "drop"
  # The 'Release to QA stage deploys The SPPKG to the Quality Assurance Environment
  # It will only do so if the Build-stage has completed successfully.

  - stage: "ReleaseToQualityAssurance"
    displayName: "Release To Quality Assurance"
    condition: succeeded('Build')

    jobs:
      - deployment: "ReleaseToAcceptance"
        displayName: "Release to Acceptance"

        environment: "Quality Assurance environment"

        strategy:
          runOnce:
            deploy:
              steps:
                - task: NodeTool@0
                  displayName: "Use Node 16.x"
                  inputs:
                    versionSpec: 16.x
                - script: ls
                    echo $(Pipeline.Workspace)
                    ls $(Pipeline.Workspace)
